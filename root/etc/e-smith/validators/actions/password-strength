#!/usr/bin/perl

#
# Copyright (C) 2012 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::ConfigDB;

my $objectType = shift;
my $passwordFile = shift;
my $reason;

if( ! defined $objectType ) {
    die "Missing objectType argument";
}

if( ! defined $passwordFile ) {
    die "Missing passwordFile argument";
}

open(PWFILE, '<', $passwordFile) or die("[ERROR] Cannot read password from temporary file\n");
my $password = <PWFILE>;
chomp($password);
close(PWFILE);

my $configDb = esmith::ConfigDB->open_ro();
my $strength = $configDb->get_prop('passwordstrength', $objectType);

if ( ! defined $strength ) {
    # skip to end..

} elsif( length($password) < 7 ) {
    # too_short
    exit 3;

} elsif( $strength eq 'none' ) {
    exit 0;

} elsif( $strength eq 'strong') {
    exit 5 if ($password !~ /\d/); #missing digit
    exit 6 if ($password !~ /[A-Z]/); #missing capital
    exit 7 if ($password !~ /[a-z]/); #missing lowercase
    exit 8 if ($password !~ /\W|_/); #missing symbol

    my $tmp = `echo '$password' | /usr/sbin/cracklib-check 2>1`;
    ($password,$reason) = split(/:([^:]+)$/, $tmp); # split on last occurenct of colon
    $reason =~ s/^\s+//;
    $reason =~ s/\s+$//;
    if($reason !~ /OK/) {
	print $reason . "\n";
	exit 4; #system error
    }

    exit 0;   
} 

die "Invalid password strength for object " . $objectType;

